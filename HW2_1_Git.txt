TXT
 1. Создать внешний репозиторий c названием TXT. === зайти на сайт GitHub.com, войти в личный кабинет, нажать кнопку NEW (создать новый репозиторий), ввести имя репозитория TXT, создать репозиторий
 2. Клонировать репозиторий TXT на локальный компьютер. === скопировать HTTPS ссылку и зайти в Терминал, в терминале в выбранной папке ввести команду git clone (ссылка на репозиторий)
 3. Внутри локального TXT создать файл “new.txt”. === touch new.txt
 4. Добавить файл под гит. === git add new.txt
 5. Закоммитить файл. === git commit -m "add new file"
 6. Отправить файл на внешний GitHub репозиторий. === git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT. === vim new.txt -> Insert редактирование файла -> ESC :wq
 8. Отправить изменения на внешний репозиторий. === git add . -> git commit -am "change new.txt" -> git push
 9. Создать файл preferences.txt === touch preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT. === vim preferences.txt -> Insert редактирование файла -> ESC :wq
 11. Создать файл skills.txt добавить информацию о скиллах которые будут изучены на курсе create new file в формате TXT === vim skills.txt -> Insert редактирование файла -> ESC :wq
 12. Сделать коммит в одну строку. === git add .; git commit -am "add two files"
 13. Отправить сразу 2 файла на внешний репозиторий. === git push
 14. На веб интерфейсе создать файл bug_report.txt. === нажать кнопку add file далее create new file, ввести имя файла bug_report.txt
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе. === нажимаем кнопку commit new file
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT. === открываем файл, нажимаем на кнопку карандаша edit this file и редактируем файл
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. === пишем комментарий и нажимаем кнопку Commit changes
 18. Синхронизировать внешний и локальный репозиторий TXT === git pull

JSON
 4. Создать внешний репозиторий c названием JSON. === зайти на сайт GitHub.com, войти в личный кабинет, нажать кнопку NEW (создать новый репозиторий), ввести имя репозитория JSON, создать репозиторий
 5. Клонировать репозиторий JSON на локальный компьютер. === скопировать HTTPS ссылку и зайти в Терминал, в терминале в выбранной папке ввести команду git clone (ссылка на репозиторий)
 6. Внутри локального JSON создать файл “new.json”. === touch new.json
 7. Добавить файл под гит. === git add new.json
 8. Закоммитить файл. === git commit -m "add new.json"
 9. Отправить файл на внешний GitHub репозиторий. === git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON. === vim new.json -> Insert редактирование файла -> ESC :wq
 11. Отправить изменения на внешний репозиторий. === git commit -am "add new.json"
 12. Создать файл preferences.json === touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON. === vim preferences.json -> Insert редактирование файла -> ESC :wq
 14. Создать файл skills.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON === touch skills.json
 15. Отправить сразу 2 файла на внешний репозиторий. === git add .; git commit -am "add 2 files"; git push
 16. На веб интерфейсе создать файл bug_report.json. === нажать кнопку add file далее create new file, ввести имя файла bug_report.json
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. === нажимаем кнопку commit new file
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON. === открываем файл, нажимаем на кнопку карандаша edit this file и редактируем файл 
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе. === пишем комментарий и нажимаем кнопку Commit changes
 20. Синхронизировать внешний и локальный репозиторий JSON === git pull

XML
 21. Создать внешний репозиторий c названием XML. === зайти на сайт GitHub.com, войти в личный кабинет, нажать кнопку NEW (создать новый репозиторий), ввести имя репозитория TXT, создать репозиторий
 22. Клонировать репозиторий XML на локальный компьютер. === скопировать HTTPS ссылку и зайти в Терминал, в терминале в выбранной папке ввести команду git clone (ссылка на репозиторий)
 23. Внутри локального XML создать файл “new.xml”. === touch new.xml
 24. Добавить файл под гит. === git add new.xml
 25. Закоммитить файл. === git commit -m "add new.xml"
 26. Отправить файл на внешний GitHub репозиторий. === git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML. === vim new.xml -> Insert редактирование файла -> ESC :wq
 28. Отправить изменения на внешний репозиторий. === git commit -am "add new.xml"
 29. Создать файл preferences.xml === touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML. === vim preferences.xml -> Insert редактирование файла -> ESC :wq
 31. Создать файл skills.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML === touch skills.xml
 32. Сделать commit в одну строку. === git add .; git commit -am "add 2 files"
 33. Отправить сразу 2 файла на внешний репозиторий. === git push
 34. На веб интерфейсе создать файл bug_report.xml. === открываем файл, нажимаем на кнопку карандаша edit this file и редактируем файл
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе. === пишем комментарий и нажимаем кнопку Commit changes
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML. === edit this file -> редактируем -> добавляем комментарий
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе. === после добавления комментария нажимаем Commit change
 38. Синхронизировать внешний и локальный репозиторий XML === заходим в Терминал в папку XML и вводим git pull